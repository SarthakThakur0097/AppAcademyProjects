@model InvoiceMaker.FormModels.EditWorkDone

<h1>Edit a Work Done</h1>

@using (Html.BeginForm("Edit", "WorkDone", FormMethod.Post, new { @class = "pure-form pure-form-aligned" }))
{
    @Html.AntiForgeryToken()


    <fieldset>
        <div>
            @Html.LabelFor(model => model.ClientId)
            @Html.DropDownListFor(model => model.ClientId, Model.ClientSelectList, "Client")
            @Html.ValidationMessageFor(model => model.ClientId, "", new { @class = "pure-form-message-inline" })

           
        </div>
        <div>
            @Html.LabelFor(model => model.WorkTypeId)
            @Html.DropDownListFor(m => m.WorkTypeId, Model.WorkTypeSelectList, "Work Type")
            @Html.ValidationMessageFor(model => model.WorkTypeId, "", new { @class = "pure-form-message-inline" })
        </div>
            <div class="pure-control-group">
                @Html.LabelFor(model => model.StartedOn)
                @Html.EditorFor(model => model.StartedOn)
                @Html.ValidationMessageFor(model => model.StartedOn, "", new { @class = "pure-form-message-inline" })
            </div>

            <div class="pure-control-group">
                @Html.LabelFor(model => model.EndedOn)
                @Html.EditorFor(model => model.EndedOn)
                @Html.ValidationMessageFor(model => model.EndedOn, "", new { @class = "pure-form-message-inline" })
            </div>
        <div class="pure-controls">
            @Html.ActionLink("Cancel", "Index", new { }, new { @class = "pure-button" })
            <button type="submit" class="pure-button pure-button-primary">Submit</button>
        </div>
    </fieldset>
}

